<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
  
  <!-- 
    Bean 등록
    
    1. <bean> 태그
      1) <bean> 태그는 Spring Container에서 관리할 객체(인스턴스)를 정의하는 XML 태그이다
      2) Java 객체를 Spring Container(IoC Container)에 등록하고, 의존성 주입(DI) 및 라이프사이클 관리를 가능하게 한다
      3) 기본 형식
      <bean id="beanId" class="org.example.project.MyClass">
        프로퍼티 or 생성자 주입 설정
      </bean>
      4) 값을 저장하는 방법
       1) <property> 태그 :Setter를 이용하는 태그
       2) <constructor-arg> 태그: Constructor를 이용하는 태그
      5) 라이프 사이클 관리
       1) scope : 빈의 범위를 설정한다 (디폴트는 singleton이다. )
       2) lazy-init : 지연 초기화를 설정한다 (디폴트는 false 이다)
   -->
  
  
  
  
  <!-- Bean 등록하기 (Spring Container에 저장된다) -->
  <bean id="adder" class="org.shark.IoC.ex01.Adder"/>
  <bean id="sub" class="org.shark.IoC.ex01.Subtractor"/>
  <bean id="mul" class="org.shark.IoC.ex01.Multiplier"/>
  <bean id="div" class="org.shark.IoC.ex01.Divider"/>
  
  <!-- Setter 이용해서 Bean 등록하기 -->
  <bean id="calc1"  class="org.shark.IoC.ex01.Calculator">
    <property name="brand" value="샤프"/>
    <property name="price" value="10000"/>
    <property name="adder" ref="adder"/>
    <property name="subtractor" ref="sub"/>
    <property name="multipler" ref="mul"/>
    <property name="divider" ref="div"/>
  </bean>
  
  <!-- Constructor 이용해서 Bean 등록하기 (매개변수 순서대로 값을 전달해야 한다) -->
  <bean id="calc2" class="org.shark.IoC.ex01.Calculator">
    <constructor-arg value="필립스"/>
    <constructor-arg value="20000"/>
    <constructor-arg ref="adder"/>
    <constructor-arg ref="div"/>
    <constructor-arg ref="mul"/>
    <constructor-arg ref="sub"/>
  </bean>
  
</beans>
